# print(countries_starting_with_B)
# for (country in countries) {
# 	if (gapminder$country == country) {
# 		print(gapminder$)
# 	}
# 	print(country)
# }
for (row in 1:nrow(gapminder)) {
gapminder_record <- gapminder[row,]
country <- as.character(gapminder_record[['country']])
print(country)
# lifeExp  <- gapminder[row, "lifeExp"]
#
# if(lifeExp > 50) {
#     print(country)
# }
}
library(gapminder)
library(tidyverse)
calcGDP <- function(selected_year = NULL, selected_country = NULL) {
# Make sure we do not exit out of our script just because of a silly missing record:
tryCatch({
# Make sure the year is in the dataset and that country is a string:
stopifnot(selected_year %in% gapminder$year | is.character(selected_country))
gdp_df <- gapminder %>%
filter(country == selected_country & year == selected_year)
# Make sure we are only getting one record:
stopifnot(nrow(gdp_df) == 1)
return(gdp_df$pop * gdp_df$gdpPercap)
},
error = function(msg) {
print(msg)
return(NA)
})
}
# Check all of the years:
for (year in c(1967, 1977, 1987, 1997, 2007, 2017)) {
print(str_c(year, ': ', round(calcGDP(year, 'Denmark'))))
}
2017 %in% distinct(gapminder, year)
# head(gapminder)
# countries_starting_with_B <- gapminder[startsWith(as.character(gapminder[['country']]), 'B'), ] %>%
# countries <- gapminder[['country']]
# for (country in countries) {
# 	if (startsWith(country, 'B')) {
#
# 	}
# }
# print(countries_starting_with_B)
# for (country in countries) {
# 	if (gapminder$country == country) {
# 		print(gapminder$)
# 	}
# 	print(country)
# }
for (row in 1:nrow(gapminder)) {
gapminder_record <- gapminder[row,]
country <- as.character(gapminder_record[['country']])
lifeExp <- gapminder_record[['lifeExp']]
print(paste(country, lifeExp))
# lifeExp  <- gapminder[row, "lifeExp"]
#
# if(lifeExp > 50) {
#     print(country)
# }
}
library(gapminder)
library(tidyverse)
calcGDP <- function(selected_year = NULL, selected_country = NULL) {
# Make sure we do not exit out of our script just because of a silly missing record:
tryCatch({
# Make sure the year is in the dataset and that country is a string:
stopifnot(selected_year %in% gapminder$year | is.character(selected_country))
gdp_df <- gapminder %>%
filter(country == selected_country & year == selected_year)
# Make sure we are only getting one record:
stopifnot(nrow(gdp_df) == 1)
return(gdp_df$pop * gdp_df$gdpPercap)
},
error = function(msg) {
print(msg)
return(NA)
})
}
# Check all of the years:
for (year in c(1967, 1977, 1987, 1997, 2007, 2017)) {
print(str_c(year, ': ', round(calcGDP(year, 'Denmark'))))
}
2017 %in% distinct(gapminder, year)
# head(gapminder)
# countries_starting_with_B <- gapminder[startsWith(as.character(gapminder[['country']]), 'B'), ] %>%
# countries <- gapminder[['country']]
# for (country in countries) {
# 	if (startsWith(country, 'B')) {
#
# 	}
# }
# print(countries_starting_with_B)
# for (country in countries) {
# 	if (gapminder$country == country) {
# 		print(gapminder$)
# 	}
# 	print(country)
# }
for (row in 1:nrow(gapminder)) {
gapminder_record <- gapminder[row,]
country <- as.character(gapminder_record[['country']])
lifeExp <- gapminder_record[['lifeExp']]
if (startsWith(country, 'B')) {
print(country)
}
# lifeExp  <- gapminder[row, "lifeExp"]
#
# if(lifeExp > 50) {
#     print(country)
# }
}
library(gapminder)
library(tidyverse)
calcGDP <- function(selected_year = NULL, selected_country = NULL) {
# Make sure we do not exit out of our script just because of a silly missing record:
tryCatch({
# Make sure the year is in the dataset and that country is a string:
stopifnot(selected_year %in% gapminder$year | is.character(selected_country))
gdp_df <- gapminder %>%
filter(country == selected_country & year == selected_year)
# Make sure we are only getting one record:
stopifnot(nrow(gdp_df) == 1)
return(gdp_df$pop * gdp_df$gdpPercap)
},
error = function(msg) {
print(msg)
return(NA)
})
}
# Check all of the years:
for (year in c(1967, 1977, 1987, 1997, 2007, 2017)) {
print(str_c(year, ': ', round(calcGDP(year, 'Denmark'))))
}
2017 %in% distinct(gapminder, year)
# head(gapminder)
# countries_starting_with_B <- gapminder[startsWith(as.character(gapminder[['country']]), 'B'), ] %>%
# countries <- gapminder[['country']]
# for (country in countries) {
# 	if (startsWith(country, 'B')) {
#
# 	}
# }
# print(countries_starting_with_B)
# for (country in countries) {
# 	if (gapminder$country == country) {
# 		print(gapminder$)
# 	}
# 	print(country)
# }
for (row in 1:nrow(gapminder)) {
gapminder_record <- gapminder[row,]
country <- as.character(gapminder_record[['country']])
lifeExp <- gapminder_record[['lifeExp']]
year <- gapminder_record[['year']]
if ((startsWith(country, 'B'))) {
if (lifeExp < 50) {
print(paste('The life expectancy of', country, 'in the year', year, 'is less than 50 years'))
} else if (lifeExp <= 70) {
print(paste('The life expectancy of', country, 'in the year', year, 'is between 50 and 70 years'))
} else {
print(paste('The life expectancy of', country, 'in the year', year, 'is between more than 70 years'))
}
}
}
library(gapminder)
library(tidyverse)
calcGDP <- function(selected_year = NULL, selected_country = NULL) {
# Make sure we do not exit out of our script just because of a silly missing record:
tryCatch({
# Make sure the year is in the dataset and that country is a string:
stopifnot(selected_year %in% gapminder$year | is.character(selected_country))
gdp_df <- gapminder %>%
filter(country == selected_country & year == selected_year)
# Make sure we are only getting one record:
stopifnot(nrow(gdp_df) == 1)
return(gdp_df$pop * gdp_df$gdpPercap)
},
error = function(msg) {
print(msg)
return(NA)
})
}
# Check all of the years:
for (year in c(1967, 1977, 1987, 1997, 2007, 2017)) {
print(str_c(year, ': ', round(calcGDP(year, 'Denmark'))))
}
2017 %in% distinct(gapminder, year)
# We we loop through all indices of gapminder's rows:
for (index in 1:nrow(gapminder)) {
# And select the actual row with the given index:
gapminder_record <- gapminder[index,]
# Isolate the row's values of the given columns:
country <- as.character(gapminder_record[['country']])
lifeExp <- gapminder_record[['lifeExp']]
year <- gapminder_record[['year']]
if ((startsWith(country, 'B'))) {
if (lifeExp < 50) {
print(paste('The life expectancy of', country, 'in the year', year, 'is less than 50 years'))
} else if (lifeExp <= 70) {
print(paste('The life expectancy of', country, 'in the year', year, 'is between 50 and 70 years'))
} else {
print(paste('The life expectancy of', country, 'in the year', year, 'is between more than 70 years'))
}
}
}
library(gapminder)
library(tidyverse)
calcGDP <- function(selected_year = NULL, selected_country = NULL) {
# Make sure we do not exit out of our script just because of a silly missing record:
tryCatch({
# Make sure the year is in the dataset and that country is a string:
stopifnot(selected_year %in% gapminder$year | is.character(selected_country))
gdp_df <- gapminder %>%
filter(country == selected_country & year == selected_year)
# Make sure we are only getting one record:
stopifnot(nrow(gdp_df) == 1)
return(gdp_df$pop * gdp_df$gdpPercap)
},
error = function(msg) {
print(msg)
return(NA)
})
}
# Check all of the years:
for (year in c(1967, 1977, 1987, 1997, 2007, 2017)) {
print(str_c(year, ': ', round(calcGDP(year, 'Denmark'))))
}
2017 %in% distinct(gapminder, year)
# We we loop through all indices of gapminder's rows:
for (index in 1:nrow(gapminder)) {
# And select the actual row with the given index:
gapminder_record <- gapminder[index,]
# Isolate the row's values of the given columns:
country <- as.character(gapminder_record[['country']])
lifeExp <- gapminder_record[['lifeExp']]
year <- gapminder_record[['year']]
# We don't want to repeat ourselves too much:
base_message <- paste('The life expectancy of', country, 'in the year', year)
if ((startsWith(country, 'B'))) {
if (lifeExp < 50) {
print(paste(base_message, 'is less than 50 years'))
} else if (lifeExp <= 70) {
print(paste(base_message, 'is between 50 and 70 years'))
} else {
print(paste(base_message, 'is between more than 70 years'))
}
}
}
library(gapminder)
library(tidyverse)
calcGDP <- function(selected_year = NULL, selected_country = NULL) {
# Make sure we do not exit out of our script just because of a silly missing record:
tryCatch({
# Make sure the year is in the dataset and that country is a string:
stopifnot(selected_year %in% gapminder$year | is.character(selected_country))
gdp_df <- gapminder %>%
filter(country == selected_country & year == selected_year)
# Make sure we are only getting one record:
stopifnot(nrow(gdp_df) == 1)
return(gdp_df$pop * gdp_df$gdpPercap)
},
error = function(msg) {
print(msg)
return(NA)
})
}
# Check all of the years:
for (year in c(1967, 1977, 1987, 1997, 2007, 2017)) {
print(str_c(year, ': ', round(calcGDP(year, 'Denmark'))))
}
2017 %in% distinct(gapminder, year)
# We we loop through all indices of gapminder's rows:
for (index in 1:nrow(gapminder)) {
# And select the actual row with the given index:
gapminder_record <- gapminder[index,]
# Isolate the row's values of the given columns:
country <- as.character(gapminder_record[['country']])
lifeExp <- gapminder_record[['lifeExp']]
year <- gapminder_record[['year']]
# We don't want to repeat ourselves too much:
base_message <- paste('The life expectancy of', country, 'in the year', year, 'is')
if ((startsWith(country, 'B'))) {
if (lifeExp < 50) {
print(paste(base_message, 'less than 50 years'))
} else if (lifeExp <= 70) {
print(paste(base_message, 'between 50 and 70 years'))
} else {
print(paste(base_message, 'between more than 70 years'))
}
}
}
library(gapminder)
library(tidyverse)
calcGDP <- function(selected_year = NULL, selected_country = NULL) {
# Make sure we do not exit out of our script just because of a silly missing record:
tryCatch({
# Make sure the year is in the dataset and that country is a string:
stopifnot(selected_year %in% gapminder$year | is.character(selected_country))
gdp_df <- gapminder %>%
filter(country == selected_country & year == selected_year)
# Make sure we are only getting one record:
stopifnot(nrow(gdp_df) == 1)
return(gdp_df$pop * gdp_df$gdpPercap)
},
error = function(msg) {
print(msg)
return(NA)
})
}
# Check all of the years:
for (year in c(1967, 1977, 1987, 1997, 2007, 2017)) {
print(str_c(year, ': ', round(calcGDP(year, 'Denmark'))))
}
2017 %in% distinct(gapminder, year)
# We we loop through all indices of gapminder's rows:
for (index in 1:nrow(gapminder)) {
# And select the actual row with the given index:
gapminder_record <- gapminder[index,]
# Isolate the row's values of the given columns:
country <- as.character(gapminder_record[['country']])
lifeExp <- gapminder_record[['lifeExp']]
year <- gapminder_record[['year']]
# We don't want to repeat ourselves too much:
base_message <- paste('The life expectancy of', country, 'in the year', year, 'is')
if ((startsWith(country, 'B'))) {
if (lifeExp < 50) {
print(paste(base_message, 'less than 50 years'))
} else if (lifeExp <= 70) {
print(paste(base_message, 'between 50 and 70 years'))
} else {
print(paste(base_message, 'more than 70 years'))
}
}
}
x <- gapminder %>%
group_by(country)
print(x)
print(x)
library(gapminder)
library(tidyverse)
calcGDP <- function(selected_year = NULL, selected_country = NULL) {
# Make sure we do not exit out of our script just because of a silly missing record:
tryCatch({
# Make sure the year is in the dataset and that country is a string:
stopifnot(selected_year %in% gapminder$year | is.character(selected_country))
gdp_df <- gapminder %>%
filter(country == selected_country & year == selected_year)
# Make sure we are only getting one record:
stopifnot(nrow(gdp_df) == 1)
return(gdp_df$pop * gdp_df$gdpPercap)
},
error = function(msg) {
print(msg)
return(NA)
})
}
# Check all of the years:
for (year in c(1967, 1977, 1987, 1997, 2007, 2017)) {
print(str_c(year, ': ', round(calcGDP(year, 'Denmark'))))
}
2017 %in% distinct(gapminder, year)
# We we loop through all indices of gapminder's rows:
for (index in 1:nrow(gapminder)) {
# And select the actual row with the given index:
gapminder_record <- gapminder[index,]
# Isolate the row's values of the given columns:
country <- as.character(gapminder_record[['country']])
lifeExp <- gapminder_record[['lifeExp']]
year <- gapminder_record[['year']]
# We don't want to repeat ourselves too much:
base_message <- paste('The life expectancy of', country, 'in the year', year, 'is')
if ((startsWith(country, 'B'))) {
if (lifeExp < 50) {
print(paste(base_message, 'less than 50 years'))
} else if (lifeExp <= 70) {
print(paste(base_message, 'between 50 and 70 years'))
} else {
print(paste(base_message, 'more than 70 years'))
}
}
}
x <- gapminder %>%
filter(startsWith(country, 'M'))
library(gapminder)
library(tidyverse)
calcGDP <- function(selected_year = NULL, selected_country = NULL) {
# Make sure we do not exit out of our script just because of a silly missing record:
tryCatch({
# Make sure the year is in the dataset and that country is a string:
stopifnot(selected_year %in% gapminder$year | is.character(selected_country))
gdp_df <- gapminder %>%
filter(country == selected_country & year == selected_year)
# Make sure we are only getting one record:
stopifnot(nrow(gdp_df) == 1)
return(gdp_df$pop * gdp_df$gdpPercap)
},
error = function(msg) {
print(msg)
return(NA)
})
}
# Check all of the years:
for (year in c(1967, 1977, 1987, 1997, 2007, 2017)) {
print(str_c(year, ': ', round(calcGDP(year, 'Denmark'))))
}
2017 %in% distinct(gapminder, year)
# We we loop through all indices of gapminder's rows:
for (index in 1:nrow(gapminder)) {
# And select the actual row with the given index:
gapminder_record <- gapminder[index,]
# Isolate the row's values of the given columns:
country <- as.character(gapminder_record[['country']])
lifeExp <- gapminder_record[['lifeExp']]
year <- gapminder_record[['year']]
# We don't want to repeat ourselves too much:
base_message <- paste('The life expectancy of', country, 'in the year', year, 'is')
if ((startsWith(country, 'B'))) {
if (lifeExp < 50) {
print(paste(base_message, 'less than 50 years'))
} else if (lifeExp <= 70) {
print(paste(base_message, 'between 50 and 70 years'))
} else {
print(paste(base_message, 'more than 70 years'))
}
}
}
x <- gapminder %>%
filter(startsWith(as.character(country), 'M'))
print(x)
# # We we loop through all indices of gapminder's rows:
# for (index in 1:nrow(gapminder)) {
# 	# And select the actual row with the given index:
# 	gapminder_record <- gapminder[index,]
#
# 	# Isolate the row's values of the given columns:
#   country <- as.character(gapminder_record[['country']])
#   lifeExp <- gapminder_record[['lifeExp']]
#   year <- gapminder_record[['year']]
#
#
#   if ((startsWith(country, 'M'))) {
#
#   }
# }
library(gapminder)
library(tidyverse)
calcGDP <- function(selected_year = NULL, selected_country = NULL) {
# Make sure we do not exit out of our script just because of a silly missing record:
tryCatch({
# Make sure the year is in the dataset and that country is a string:
stopifnot(selected_year %in% gapminder$year | is.character(selected_country))
gdp_df <- gapminder %>%
filter(country == selected_country & year == selected_year)
# Make sure we are only getting one record:
stopifnot(nrow(gdp_df) == 1)
return(gdp_df$pop * gdp_df$gdpPercap)
},
error = function(msg) {
print(msg)
return(NA)
})
}
# Check all of the years:
for (year in c(1967, 1977, 1987, 1997, 2007, 2017)) {
print(str_c(year, ': ', round(calcGDP(year, 'Denmark'))))
}
2017 %in% distinct(gapminder, year)
# We we loop through all indices of gapminder's rows:
for (index in 1:nrow(gapminder)) {
# And select the actual row with the given index:
gapminder_record <- gapminder[index,]
# Isolate the row's values of the given columns:
country <- as.character(gapminder_record[['country']])
lifeExp <- gapminder_record[['lifeExp']]
year <- gapminder_record[['year']]
# We don't want to repeat ourselves too much:
base_message <- paste('The life expectancy of', country, 'in the year', year, 'is')
if ((startsWith(country, 'B'))) {
if (lifeExp < 50) {
print(paste(base_message, 'less than 50 years'))
} else if (lifeExp <= 70) {
print(paste(base_message, 'between 50 and 70 years'))
} else {
print(paste(base_message, 'more than 70 years'))
}
}
}
x <- gapminder %>%
filter(startsWith(as.character(country), 'M')) %>%
group_by(country)
print(x)
# # We we loop through all indices of gapminder's rows:
# for (index in 1:nrow(gapminder)) {
# 	# And select the actual row with the given index:
# 	gapminder_record <- gapminder[index,]
#
# 	# Isolate the row's values of the given columns:
#   country <- as.character(gapminder_record[['country']])
#   lifeExp <- gapminder_record[['lifeExp']]
#   year <- gapminder_record[['year']]
#
#
#   if ((startsWith(country, 'M'))) {
#
#   }
# }
