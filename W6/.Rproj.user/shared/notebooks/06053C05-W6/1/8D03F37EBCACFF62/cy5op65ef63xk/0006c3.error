{"frames":[{"func":"gapminder[gapminder[row, \"country\"]]","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"`[.tbl_df`(gapminder, gapminder[row, \"country\"])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"vectbl_as_col_location(j, length(xo), names(xo), j_arg = j_arg, \n    assign = FALSE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"subclass_col_index_errors(vec_as_location(j, n, names), j_arg = j_arg, \n    assign = assign)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(expr, vctrs_error_subscript = function(cnd) {\n    cnd$subscript_arg <- j_arg\n    cnd$subscript_elt <- \"column\"\n    if (isTRUE(assign) && !isTRUE(cnd$subscript_action %in% c(\"negate\"))) { ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"vec_as_location(j, n, names)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"cnd_signal(structure(list(message = \"\", trace = NULL, parent = NULL, \n    i = structure(list(country = structure(1L, .Label = c(\"Afghanistan\", \n    \"Albania\", \"Algeria\", \"Angola\", \"Argentina\", \"Australia\", \n    \"Austria\", \"Bahrain\", \"Bangladesh\", \"Belgium\", \"Benin\", \"Bolivia\",  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signalCondition(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function (cnd) \n{\n    cnd$subscript_arg <- j_arg\n    cnd$subscript_elt <- \"column\" ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"cnd_signal(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rlang:::signal_abort(x)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Fejl: Must subset columns with a valid subscript vector.\n\u001B[31mx\u001B[39m Subscript `gapminder[row, \"country\"]` has the wrong type `tbl_df<country:factor<bf6dc>>`.\n\u001B[34mi\u001B[39m It must be logical, numeric, or character.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n"}